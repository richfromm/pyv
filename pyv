#!/bin/bash -e

# pyv - On the fly Python virtualenv management for scripts.
#
# Author: Rich Fromm
# Source: https://github.com/richfromm/pyv
# License: Copy freely, but please retain attribution.

function usage() {
   echo "usage:" >&2
   echo "   pyv [ -r ] [ -u ] [ -p <python-exe> ] script.py [args ...]" >&2
   echo >&2
   echo "Runs the python script at script.py using a local virtualenv" >&2
   echo "specified in script.pyv" >&2
   echo "The virtualenv will be created if needed."
   echo >&2
   echo "Options:" >&2
   echo "   -r: recreate virtualenv from scratch" >&2
   echo "       (default is to leave in place if it already exists)" >&2
   echo "   -u: update an existing virtualenv" >&2
   echo "       (default is to use as is if it already exists)" >&2
   echo "   -p: Use python specified by <python-exe>" >&2
   echo "       (default is to use whatever \"python\" points to)" >&2
}

if [[ $# -lt 1 ]]; then
   usage
   exit 1
fi

# defaults
recreate=""
update=""
python="python"

# option parsing
while getopts "hrup:" arg; do
   case "$arg" in
      "r") recreate=1 ;;
      "u") update=1 ;;
      "p") python="$OPTARG" ;;
      "h") usage; exit 1 ;;
      "?") usage; exit 1 ;;
      *) usage; exit 1 ;;
   esac
done

# skip through the options
shift_amt=$(( $OPTIND - 1 ))
shift $shift_amt

script_name=$1
shift

if [[ ! -r $script_name ]]; then
   echo "ERROR: File not found $script_name" >&2
   echo >&2
   usage
   exit 1
fi

script_dirname=$(dirname $script_name)
script_basename=$(basename $script_name)
venv_name=${script_basename%.py}
pyv_file=${script_dirname}/${venv_name}.pyv

if [[ ! -r $pyv_file ]]; then
   echo "ERROR: File not found $pyv_file" >&2
   echo >&2
   usage
   exit 1
fi

pyv_dir="${script_dirname}/.pyv"
venv_dir="${pyv_dir}/${venv_name}"

if [[ ! -r "$venv_dir/bin/activate" ]]; then
   recreate=1
fi

if [[ -n "$recreate" ]]; then
   if [[ -d $venv_dir ]]; then
      rm -f -r $venv_dir
   fi
   mkdir -p $pyv_dir
   # this will respect anything set by pyenv
   python_exe=$(which $python)
   virtualenv -p $python_exe $venv_dir >&2
fi

if [[ ! -r "$venv_dir/bin/activate" ]]; then
   echo "ERROR: pyv venv not properly setup, possible pyv bug: $venv_dir" >&2
fi

. $venv_dir/bin/activate

if [[ -n "$recreate" || -n "$update" ]]; then
   pip install -r $pyv_file >&2
fi
   
# temporarily disable errexit (#!/bin/bash -e) so that we can cleanly deal with
# calling a script that might fail, and exitting with its exit value
set +o errexit
$python $script_name "$@"
exitval=$?
set -o errexit

deactivate

exit $exitval
